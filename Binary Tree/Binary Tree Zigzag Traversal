import java.util.* ;
import java.io.*; 
/*
	Following is the class used to represent the object/node of the Binary Tree

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
	        this.data = data;
	    }
	}
*/

public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
	List<Integer> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
Queue<BinaryTreeNode<Integer>> queue = new LinkedList<>();
        queue.offer(root);
        boolean leftToRight = true;

        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> levelNodes = new ArrayList<>();

            for (int i = 0; i < size; i++) {
                BinaryTreeNode<Integer> node = queue.poll();

                if (leftToRight) {
                    levelNodes.add(node.data);
                } else {
                    levelNodes.add(0, node.data);
                }

                if (node.left != null) {
                    queue.offer(node.left);
                }
       if (node.right != null) {
                    queue.offer(node.right);
                }
            }

            result.addAll(levelNodes);
            leftToRight = !leftToRight;
        }

        return result;
	
	
	}
}

