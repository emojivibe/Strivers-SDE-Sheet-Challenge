import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the Tree node structure
	
	class TreeNode {
		int data;
		TreeNode left;
		TreeNode right;

		TreeNode(int data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}

	}

************************************************************/

public class Solution {
	public static long findMaxSumPath(TreeNode root) {
		maxSum = Long.MIN_VALUE; // Initialize maxSum

        dfs(root);

        return (maxSum == Long.MIN_VALUE) ? -1 : maxSum;// Write your code here.
	}
	private static long dfs(TreeNode node) {
        if (node == null)
            return 0;

         long left = dfs(node.left);
        long right = dfs(node.right);

        // Update maxSum if the current path sum is greater
        if (node.left != null && node.right != null) {
            maxSum = Math.max(maxSum, node.data + left + right);
        }

        // Return the maximum sum from the current node to its parent
        if (node.left == null)
            return node.data + right;
        else if (node.right == null)
            return node.data + left;
        else
            return node.data + Math.max(left, right);
    }
    }


