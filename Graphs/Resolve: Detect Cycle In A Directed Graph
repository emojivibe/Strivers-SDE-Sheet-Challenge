import java.util.*;
import java.util.ArrayList;
public class Solution {
  private static boolean checkCycle(int node,ArrayList<ArrayList<Integer>> edges,int vis[],int dfsVis[]){
    vis[node]=1;
    dfsVis[node]=1;
    for(Integer it: edges.get(node)){
      if(vis[it]==0){
        if(checkCycle(it, edges, vis, dfsVis)){
          return true;
        }
      }else if(dfsVis[it]==1){
        return true;
      }
    }
    dfsVis[node]=0;
    return false;
  }
  public static boolean detectCycleInDirectedGraph(int n, ArrayList < ArrayList < Integer >> edges) {
   int vis[]=new int[n+1];
   int dfsVis[]=new int[n+1];
   for(int i=0;i<=n;i++){
     if(vis[i]==0){
       if(checkCycle(i,edges,vis,dfsVis)) return true;
     }

   } 
   return false;// Write your code here.
  }
}
