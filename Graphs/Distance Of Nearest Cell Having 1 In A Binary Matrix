import java.util.*;
import java.util.Queue;
class Node{
int first; int sec;int third;
Node(int _first,int _sec,int _third){
	this.first=_first;
	this.sec=_sec;
	this.third=_third;
}
}
	public class Solution {
	public static ArrayList<ArrayList<Integer>> nearest(ArrayList<ArrayList<Integer>> mat, int n, int m) {
      int[][] vis = new int[n][m];
        int[][] dist = new int[n][m];
        
        Queue<Node> q = new LinkedList<Node>();
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (mat.get(i).get(j) == 1) {
                    q.add(new Node(i, j, 0));
                    vis[i][j] = 1;
                } else {
                    vis[i][j] = 0;
                }
            }
        }
        
        int[] delrow = {-1, 0, +1, 0};
        int[] delcol = {0, +1, 0, -1};
        
        while (!q.isEmpty()) {
            Node curr = q.poll();
            int row = curr.first;
            int col = curr.sec;
            int steps = curr.third;
            
            dist[row][col] = steps;
            
            for (int i = 0; i < 4; i++) {
                int nrow = row + delrow[i];
                int ncol = col + delcol[i];
                if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && vis[nrow][ncol] == 0) {
                    vis[nrow][ncol] = 1;
                    q.add(new Node(nrow, ncol, steps + 1));
                }
            }
        }
ArrayList<ArrayList<Integer>> res=new ArrayList<>();
for(int i=0;i<n;i++){
	ArrayList<Integer> rowList=new ArrayList<>();
	for(int j=0;j<m;j++){
		rowList.add(dist[i][j]);
	}
	res.add(rowList);

}	
return res;
	}	
public static void main(String[] args){
ArrayList<ArrayList<Integer>> mat=new ArrayList<>();
mat.add(new ArrayList<>(Arrays.asList(0,1,1,0));
mat.add(new ArrayList<>(Arrays.asList(1,1,0,0));
mat.add(new ArrayList<>(Arrays.asList(0,0,1,1));
ArrayList<ArrayList<Integer>> ans=nearest(mat,3,4);
for(ArrayList<Integer> row: ans){
for(int val: row){
System.out.print(val+"");
}
System.out.println();
}
}
//
}


