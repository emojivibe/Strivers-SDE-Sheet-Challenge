import java.util.* ;
import java.io.*; 
/*************************************************************************

    Following is the class structure of the Node class:

	class TreeNode<T> {
	    public T data;
	    public TreeNode<T> left;
	    public TreeNode<T> right;

	    TreeNode(T data) {
	        this.data = data;
	        left = null;
	        right = null;
	    }
	}

*************************************************************************/
class NodeValue{
public int maxNode, minNode,maxSize;
	NodeValue(int minNode,int maxNode,int maxSize){
this.maxNode=maxNode;
	this.minNode=minNode;
	this.maxSize=maxSize;
	}
	};
public class Solution {
	private static NodeValue largestBSTHelper(TreeNode<Integer> root){
		//an empty tree is a BST of size 0
		if(root==null){
			return new NodeValue(Integer.MAX_VALUE, Integer.MIN_VALUE, 0);
		}
		NodeValue Left=largestBSTHelper(root.left);
		NodeValue Right=largestBSTHelper(root.right);
		if(Left.maxNode< root.data && root.data< Right.minNode){
			return new NodeValue(Math.min(root.data,Left.minNode),Math.max(root.data,Right.maxNode), Left.maxSize+Right.maxSize+1);
		}
		return new NodeValue(Integer.MIN_VALUE,Integer.MAX_VALUE,Math.max(Left.maxSize,Right.maxSize));
	}
	
	
	public static int largestBST(TreeNode<Integer> root) {
	return largestBSTHelper(root).maxSize;	// Write your code here.
	}
}
